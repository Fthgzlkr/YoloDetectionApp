@model YoloDetectionApp.Models.UploadResultViewModel
@{
    ViewData["Title"] = "YOLO Nesne Tespiti";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">YOLO Nesne Tespiti</h2>

    <!-- Yükleme Kartı -->
    <div class="card shadow-sm p-4">
        <h4 class="mb-3">Görüntü Yükleme ve İşleme</h4>
        <form method="post" enctype="multipart/form-data" asp-action="UploadImages" id="uploadForm">
            <div class="mb-3">
                <input type="file" class="form-control" name="uploadedFiles" id="uploadedFiles" accept="image/*" multiple onchange="previewImages(event)">
            </div>
            <button type="submit" class="btn btn-primary w-100">Fotoğrafları Yükle ve İşle</button>
        </form>

        <div id="loading" style="display: none;" class="text-center mt-3">
            <div class="spinner-border text-primary" role="status"></div>
            <span>İşleniyor, lütfen bekleyin...</span>
        </div>
    </div>

    <!-- Önizleme Galerisi -->
    <h3 class="mt-4">Yüklenen Resimler:</h3>
    <div class="row mt-2" id="previewGallery"></div>

    <!-- Sonuç Galerisi -->
    <h3 class="mt-4">İşlenmiş Resimler:</h3>
    <div class="row mt-2" id="resultGallery">
        @if (Model.ProcessedImages != null && Model.ProcessedImages.Any())
        {
            foreach (var imagePath in Model.ProcessedImages)
            {
                <div class="col-md-3 img-card">
                    <img src="@imagePath" class="result-img rounded" onclick="showModal('@imagePath')" />
                    <p>@System.IO.Path.GetFileName(imagePath)</p>
                </div>
            }
        }
    </div>
</div>

<!-- Stil -->
<style>
    .preview-img, .result-img {
        height: 150px;
        object-fit: cover;
        cursor: pointer;
        transition: transform 0.2s ease;
    }

    .preview-img:hover, .result-img:hover {
        transform: scale(1.05);
    }

    .modal-img {
        width: 100%;
        height: auto;
    }

    .img-card {
        margin: 10px;
        border: 1px solid #ddd;
        padding: 5px;
        text-align: center;
    }

    body {
        background-color: #f8f9fa;
    }

    .class-dot {
        display: inline-block;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        margin-right: 8px;
    }

    .class-summary {
        padding-left: 20px;
        border-left: 1px solid #ddd;
    }
</style>

<!-- Resim Büyütme Modal -->
<div class="modal fade" id="imageModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-body d-flex">
                <!-- Sol: Görsel -->
                <div class="col-8 pe-3">
                    <img id="modalImage" class="modal-img" />
                </div>

                <!-- Sağ: Sınıf Özeti -->
                <div class="col-4 class-summary">
                    <h5>Bulunan Nesneler:</h5>
                    <div id="classSummaryList"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Script -->
<script>
    const form = document.getElementById('uploadForm');
    const loading = document.getElementById('loading');
    form.addEventListener('submit', function () {
        loading.style.display = 'block';
    });

    // Sunucudan gelen class özetleri
    const classData = @Html.Raw(Json.Serialize(Model.ClassSummaries));

   function previewImages(event) {
    const files = event.target.files;
    const gallery = document.getElementById('previewGallery');
    gallery.innerHTML = '';

    for (let i = 0; i < files.length; i++) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const div = document.createElement('div');
            div.classList.add('col-md-3', 'img-card');
            div.innerHTML = `
                <img src="${e.target.result}" class="preview-img rounded">
                <p>${files[i].name}</p>
            `;
            gallery.appendChild(div);
        };
        reader.readAsDataURL(files[i]);
    }
}

function showModal(src) {
    console.log("🖼️ Tıklanan resim src:", src);
    console.log("📦 classData (tüm veriler):", classData);
    console.log("🔍 classData[src]:", classData[src]);

    const modal = new bootstrap.Modal(document.getElementById('imageModal'));
    const modalImage = document.getElementById('modalImage');
    modalImage.src = src;

    const summaryList = document.getElementById('classSummaryList');
    summaryList.innerHTML = '';

    const summary = classData[src];
    if (summary && summary.length > 0) {
        summary.forEach(item => {
            console.log("🧪 item verisi:", item);  // 💥 Burayı da ekle
            const row = document.createElement('div');
            row.classList.add("d-flex", "align-items-center", "mb-2");
            row.innerHTML = `
    <span class="class-dot" style="background-color:${item.colorHex};"></span>
    <strong class="me-2">${item.className}</strong>
    <span class="ms-auto">×${item.count}</span>
`;

            summaryList.appendChild(row);
        });
    } else {
        summaryList.innerHTML = '<p>Bu resim için sınıf özeti yok.</p>';
    }

    modal.show();
}


</script>
